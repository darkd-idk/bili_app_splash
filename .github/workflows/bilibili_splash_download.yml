name: Bilibili Splash Download

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  
  push:
    paths-ignore:
      - 'splash/**'

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  download-splash:
    name: "Download Bilibili Splash Images"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      SPLASH_DIR: 'splash'
      SCRIPT_FILE: 'splash_downloader.py'
      REPORT_FILE: 'splash_report.md'
      REPORT_DIR: '.reports'
      URL_LIST_FILE: 'splash_urls.txt'
      LOG_FILE: 'splash.log'  # 新增明确的日志文件变量

    steps:
      # ...前面的步骤保持不变...
      
      # 步骤10: 生成报告
      - name: "Generate Report"
        run: |
          set -euo pipefail
          
          # 确保报告目录存在
          mkdir -p "$REPORT_DIR"
          
          # 创建报告文件
          report_path="$REPORT_DIR/$REPORT_FILE"
          
          # 确保日志文件存在（即使为空）
          if [ ! -f "$LOG_FILE" ]; then
            touch "$LOG_FILE"
            echo "No log content available" > "$LOG_FILE"
          fi
          
          # 确保URL列表文件存在
          if [ ! -f "$URL_LIST_FILE" ]; then
            touch "$URL_LIST_FILE"
          fi
          
          # 获取日志内容
          log_content=$(cat "$LOG_FILE")
          
          # 生成报告内容
          echo "# Splash Image Download Report" > "$report_path"
          echo "- **Date**: $(date -u)" >> "$report_path"
          echo "- **Workflow**: $GITHUB_WORKFLOW" >> "$report_path"
          echo "- **Run ID**: [$GITHUB_RUN_ID](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> "$report_path"
          echo "- **Download Status**: ${DOWNLOAD_STATUS:-Unknown}" >> "$report_path"
          echo "" >> "$report_path"
          echo "## Download Log" >> "$report_path"
          echo "\`\`\`" >> "$report_path"
          echo "$log_content" >> "$report_path"
          echo "\`\`\`" >> "$report_path"
          
          echo "📊 Report generated at $report_path"

      # 步骤11: 上传制品（修复版）
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: "splash-artifacts-${{ github.run_id }}"
          path: |
            ${{ env.REPORT_DIR }}/${{ env.REPORT_FILE }}
            ${{ env.LOG_FILE }}
            ${{ env.URL_LIST_FILE }}
          if-no-files-found: error # 如果找不到文件，报告错误但继续工作流
          retention-days: 7
