name: Bilibili Splash Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '1 20 * * *'  # UTC时间20:01（北京时间次日04:01）
  push:
    branches:
      - main
    paths-ignore:
      - 'app_splash/**'  # 忽略开屏图目录的更改，避免触发循环

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync-splash-images:
    name: 同步B站开屏图
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 检出代码库
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # 使用更新的Python版本

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: 下载开屏图
        run: |
          python get_app_splash.py || echo "下载过程中出现错误"
        shell: bash

      - name: 配置Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'non-reply@github.com'

      - name: 提交变更
        run: |
          # 仅在存在更改时提交
          git status
          git diff --quiet --exit-code && git diff --staged --quiet --exit-code || {
            git add -A
            git commit -m "自动更新开屏图 - $(date +'%Y-%m-%d %H:%M')"
          }
        shell: bash

      - name: 推送到仓库
        run: |
          if git diff --quiet origin/$GITHUB_REF_NAME HEAD; then
            echo "没有需要推送的更改"
          else
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git push origin HEAD:$GITHUB_REF_NAME
          fi
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        shell: bash

      - name: 生成报告
        run: |
          {
            echo "# B站开屏图同步报告"
            echo ""
            echo "**同步时间**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            echo "**图片总数**: $(find app_splash -maxdepth 1 -type f $ -name "*.jpg" -o -name "*.png" -o -name "*.webp" $ | wc -l)"
            echo ""
            echo "## 最新文件"
            ls -lt -d app_splash/* | head -n 5
          } > report.md
        shell: bash

      - name: 上传报告
        uses: actions/upload-artifact@v3
        with:
          name: splash-report
          path: report.md
